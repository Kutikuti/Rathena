//===== FoY Script =======================================
//= Event chaise musicale
//===== By: ==================================================
//= Kutikuti
//===== Current Version: =====================================
//= 0.1
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= Dans une petite salle, des safety de différents lvl vont être posés par le npc, en fonction du nombre de joueur. 
//Chaque joueur a quelques secondes pour se diriger vers un safety. 
//Si deux joueurs sont sur un même safety, c’est perdu. 
//Quand le npc dit “Stop”, les joueurs sont stone curse. 
//Si les joueurs ne sont pas sur des safety a temps, c’est perdu. 
//Les Safety disparaissent chacun à leur tour, en fonction de leur lvl. 
//Le dernier joueur sur map est le gagnant. Jeu a faire sur plusieures manches.
//= 
//===== Additional Comments: =================================
//= 0.1 Création
//============================================================

prontera,161,155,4	script	Musical Chair Event	795,{

	function makeSW;function isPlayerInSW;function checkPlayersInSw;function getWinner;function freezeAll;

	set .@GMLevel,60;	// GM level required to access NPC.
	set .@n$,"[^0000FFMusical Chair NPC^000000]";

	if (getgmlevel()>=.@GMLevel) {
		mes .@n$;
		mes "Select an option.";
		next;
		switch(select("Turn ON/OFF Event")) {
		case 1:
			mes .@n$;
			if (.EventON) {
				mes "The Event is currently: [^0000FFON^000000]";
				mes "Would you like to turn it OFF?";
			} else {
				mes "The Event is currently: [^FF0000OFF^000000]";
				mes "Would you like to turn it ON?";
			}
			//TODO : manage turn off
			if(select("Yes:No")==2) close;
			if (.EventON) {
				set .EventON,0; 
				set .Timer,0;
				setnpctimer 0; 
				stopnpctimer;
				announce "A GM has decided to turn the Musical Chair Event off. As a result no further prizes will be given.",bc_map | bc_blue;
				close;
			}
			next;
			mes .@n$;
			mes "Input the number of rounds you want the event to last.";
			mes "Default number: [^0000FF"+.Rounds+"^000000]";
			next;
			input .@Rounds;
			set .Rounds,.@Rounds;
			mes .@n$;
			mes "The number of rounds has been changed to "+.Rounds+".";
			set .EventON,1; 
			set .Timer,1; 
			setnpctimer 0; 
			initnpctimer;
			announce "The Musical Chair Event will begin in 3 minutes.",bc_all | bc_blue;
			announce "The Event is being held in Prontera.",bc_all | bc_blue;
			.gmrid = getattachedrid;
			close2;
		}
	}
	if (.EventON) end;

OnInit:
	set .EventON,0;
	set .roundON,0;
	set .Winner,0;
	set .Rounds,5;
	set .Prize,512;
	set .PrizeAmt,1;
	set .map$,"prontera";
	set .x1,150;
	set .y1,150;
	set .x2,160;
	set .y2,160;
	set .gmrid,0;
	end;
OnTimer10000:
	if (.Timer) end;
	goto iMusicalChair;
	end;
OnTimer60000:
	if (.Timer!=1) end;
	announce "The Musical Chair will begin in 2 minutes.",bc_all | bc_blue;
	announce "The Event is being held in Prontera.",bc_all | bc_blue;
	end;
OnTimer120000:
	if (.Timer!=1) end;
	announce "The Musical Chair will begin 1 minute.",bc_all | bc_blue;
	announce "The Event is being held in Prontera.",bc_all | bc_blue;
	end;
OnTimer180000:
	if (.Timer!=1) end;
	announce "The Musical Chair has begun!",bc_all | bc_blue;
	announce "The Event is being held in Prontera.",bc_all | bc_blue;
	set .Timer,0; 
	stopnpctimer;
	setnpctimer 0; 
	initnpctimer;
	end;
iMusicalChair:
	attachrid(.gmrid);
	set .Winner,0;

	announce "Manche " + (.RoundCount+1) + "/" + .Rounds,bc_map | bc_blue;
	sleep2 5000;

	.roundON = 1;
	makeSW();

	announce "Vous avez 30s pour vous placer dans un Safety wall",bc_map | bc_blue;


	sleep2 30000;

	announce "On ne bouge plus !",bc_map | bc_blue;
	freezeAll();

	if(checkPlayersInSw() == 0){
		goto iCancel;
	} 

	while(.Winner == 0){
		if(checkPlayersInSw() == 1){
			.Winner = 1;
		};	
		sleep2 1000;
	}
	goto iWin;
	end;
iWin:
	set .RoundCount,.RoundCount+1;
	//getitem .Prize,.PrizeAmt;
	.WinnerChar$ = getWinner();
	.roundON = 0;
	announce .WinnerChar$ + " has won!",bc_map | bc_blue;
	if (.RoundCount>=.Rounds) {
		set .RoundCount,0; 
		set .EventON,0;
		setnpctimer 0; 
		stopnpctimer;
		npctalk "Musical Chair : Thank you all for playing. That was the last round of the Musical Chair Event. Come play again later.";
		end;
	}
	setnpctimer 0;
	end;
iCancel:
	set .RoundCount,.RoundCount+1;
	.roundON = 0;
	announce "Nobody has won...",bc_map | bc_blue;
	if (.RoundCount>=.Rounds) {
		set .RoundCount,0; 
		set .EventON,0;
		setnpctimer 0; 
		stopnpctimer;
		npctalk "Musical Chair : Thank you all for playing. That was the last round of the Musical Chair Event. Come play again later.";
		end;
	}
	setnpctimer 0;
	end;

//arg0 : charID
function isPlayerInSW{
	if(getarg(0,0) == 0) {return 0;}
	.playerID = getarg(0,0);
	return getstatus(SC_SAFETYWALL,0,.playerID);
}

function makeSW{
	.players = getareaunits(BL_PC,.map$,.x1,.y1,.x2,.y2,.@array$[0]);

	for ( .i=1 ; .i <= .players ; .i++ ) {
		//todo : empecher de spawn safety au même endroit
		.x = rand(.x1,.x2);
		.y = rand(.y1,.y2);
		unitskillusepos getnpcid(0),12,(6+.i),.x,.y,-100;
		sleep2 50;
	}
}

function freezeAll{
	.@num = getareaunits(BL_PC,.map$,.x1,.y1,.x2,.y2,.@array$[0]);
	for(.@i=0;.@i<getarraysize(.@array$);.@i++){
		.charname$ = .@array$[.@i];
		.gid = getcharid(3,.charname$);
		pcblockmove .gid , 1;
		pcblockskill .gid , 1;
	}
}

function checkPlayersInSw{
	.@num = getareaunits(BL_PC,.map$,.x1,.y1,.x2,.y2,.@array$[0]);

	set .playersinSW, 0;

	for(.@i=0;.@i<getarraysize(.@array$);.@i++){
		.charname$ = .@array$[.@i];
		.charid = getcharid(0,.charname$);
		.gid = getcharid(3,.charname$);
		.inSW = isPlayerInSW(.charid);
		if (.inSW == 1) { 
			.playersinSW = .playersinSW + 1; 
		} else{
			warp .map$,156,169,.charid;
			pcblockmove .gid , 0;
			pcblockskill .gid , 0;
		}
	}

	return .playersinSW;
}

function getWinner{
	.@num = getareaunits(BL_PC,.map$,.x1,.y1,.x2,.y2,.@array$[0]);
	.charname$ = .@array$[0];
	.charid = getcharid(0,.charname$);
	.gid = getcharid(3,.charname$);
	pcblockmove .gid , 0;
	pcblockskill .gid , 0;

	return .@array$[0];
}

}

